// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VertexHRMS.DAL.Database;

#nullable disable

namespace VertexHRMS.DAL.Migrations
{
    [DbContext(typeof(VertexHRMSDbContext))]
    [Migration("20250909150425_edit")]
    partial class edit
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("VertexHRMS.DAL.Entities.Applicant", b =>
                {
                    b.Property<int>("ApplicantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ApplicantId"));

                    b.Property<DateTime>("AppliedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdentityUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("JobOpeningId")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResumePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ApplicantId");

                    b.HasIndex("IdentityUserId");

                    b.HasIndex("JobOpeningId");

                    b.ToTable("Applicant");
                });

            modelBuilder.Entity("VertexHRMS.DAL.Entities.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("VertexHRMS.DAL.Entities.AttendanceRecord", b =>
                {
                    b.Property<int>("AttendanceRecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AttendanceRecordId"));

                    b.Property<DateTime>("AttendanceDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CheckIn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CheckOut")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("WorkHours")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("AttendanceRecordId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("AttendanceRecords");
                });

            modelBuilder.Entity("VertexHRMS.DAL.Entities.Deduction", b =>
                {
                    b.Property<int>("DeductionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DeductionId"));

                    b.Property<decimal>("AmountOrPercent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsPercentage")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DeductionId");

                    b.ToTable("Deduction");
                });

            modelBuilder.Entity("VertexHRMS.DAL.Entities.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmentId"));

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ParentDepartmentId")
                        .HasColumnType("int");

                    b.HasKey("DepartmentId");

                    b.HasIndex("ParentDepartmentId");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            DepartmentId = 1,
                            DepartmentName = "Human Resources"
                        },
                        new
                        {
                            DepartmentId = 2,
                            DepartmentName = "Information Technology"
                        },
                        new
                        {
                            DepartmentId = 3,
                            DepartmentName = "Finance"
                        },
                        new
                        {
                            DepartmentId = 4,
                            DepartmentName = "Marketing"
                        },
                        new
                        {
                            DepartmentId = 5,
                            DepartmentName = "Operations"
                        });
                });

            modelBuilder.Entity("VertexHRMS.DAL.Entities.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"));

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EmployeeCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("EmploymentType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("HireDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdentityUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("ManagerId")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("PositionID")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("EmployeeId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("EmployeeCode")
                        .IsUnique();

                    b.HasIndex("IdentityUserId")
                        .IsUnique();

                    b.HasIndex("ManagerId");

                    b.HasIndex("PositionID");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("VertexHRMS.DAL.Entities.ExitClearance", b =>
                {
                    b.Property<int>("ExitClearanceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExitClearanceId"));

                    b.Property<decimal>("FinalSettlementAmt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("FinanceCleared")
                        .HasColumnType("bit");

                    b.Property<string>("FinanceClearedByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("HRCleared")
                        .HasColumnType("bit");

                    b.Property<string>("HRClearedByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("ITCleared")
                        .HasColumnType("bit");

                    b.Property<string>("ITClearedByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ResignationId")
                        .HasColumnType("int");

                    b.HasKey("ExitClearanceId");

                    b.HasIndex("FinanceClearedByUserId");

                    b.HasIndex("HRClearedByUserId");

                    b.HasIndex("ITClearedByUserId");

                    b.HasIndex("ResignationId")
                        .IsUnique();

                    b.ToTable("ExitClearance");
                });

            modelBuilder.Entity("VertexHRMS.DAL.Entities.Interview", b =>
                {
                    b.Property<int>("InterviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InterviewId"));

                    b.Property<int>("ApplicantId")
                        .HasColumnType("int");

                    b.Property<string>("Feedback")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("InterviewDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("InterviewerId")
                        .HasColumnType("int");

                    b.Property<string>("InterviewerUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("JobOpeningId")
                        .HasColumnType("int");

                    b.HasKey("InterviewId");

                    b.HasIndex("ApplicantId");

                    b.HasIndex("InterviewerId");

                    b.HasIndex("InterviewerUserId");

                    b.HasIndex("JobOpeningId");

                    b.ToTable("Interview");
                });

            modelBuilder.Entity("VertexHRMS.DAL.Entities.JobOpening", b =>
                {
                    b.Property<int>("JobOpeningId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JobOpeningId"));

                    b.Property<DateTime>("ClosingDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("JobTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PositionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PostedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("JobOpeningId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("PositionId");

                    b.ToTable("JobOpenings");
                });

            modelBuilder.Entity("VertexHRMS.DAL.Entities.LeaveApproval", b =>
                {
                    b.Property<int>("LeaveApprovalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LeaveApprovalId"));

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ActionAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ApproverEmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("ApproverUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("LeaveRequestId")
                        .HasColumnType("int");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.HasKey("LeaveApprovalId");

                    b.HasIndex("ApproverEmployeeId");

                    b.HasIndex("ApproverUserId");

                    b.HasIndex("LeaveRequestId");

                    b.ToTable("LeaveApproval");
                });

            modelBuilder.Entity("VertexHRMS.DAL.Entities.LeaveEntitlement", b =>
                {
                    b.Property<int>("LeaveEntitlementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LeaveEntitlementId"));

                    b.Property<decimal>("CarriedIn")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<decimal>("Entitled")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("LeaveTypeId")
                        .HasColumnType("int");

                    b.Property<decimal>("Used")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("LeaveEntitlementId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("LeaveTypeId");

                    b.ToTable("LeaveEntitlements");
                });

            modelBuilder.Entity("VertexHRMS.DAL.Entities.LeaveLedger", b =>
                {
                    b.Property<int>("LeaveLedgerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LeaveLedgerId"));

                    b.Property<DateTime>("EffectiveDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("LeaveTypeId")
                        .HasColumnType("int");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TxnType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LeaveLedgerId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("LeaveTypeId");

                    b.ToTable("LeaveLedgers");
                });

            modelBuilder.Entity("VertexHRMS.DAL.Entities.LeavePolicy", b =>
                {
                    b.Property<int>("LeavePolicyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LeavePolicyId"));

                    b.Property<string>("AccrualMethod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("EntitlementPerYear")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("LeaveTypeId")
                        .HasColumnType("int");

                    b.HasKey("LeavePolicyId");

                    b.HasIndex("LeaveTypeId");

                    b.ToTable("LeavePolicy");
                });

            modelBuilder.Entity("VertexHRMS.DAL.Entities.LeaveRequest", b =>
                {
                    b.Property<int>("LeaveRequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LeaveRequestId"));

                    b.Property<decimal>("DurationHours")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("LeaveTypeID")
                        .HasColumnType("int");

                    b.Property<string>("RequestedByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("StartDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LeaveRequestId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("LeaveTypeID");

                    b.HasIndex("RequestedByUserId");

                    b.ToTable("LeaveRequests");
                });

            modelBuilder.Entity("VertexHRMS.DAL.Entities.LeaveRequestDay", b =>
                {
                    b.Property<int>("LeaveRequestDayId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LeaveRequestDayId"));

                    b.Property<decimal>("ChargeableHours")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsHoliday")
                        .HasColumnType("bit");

                    b.Property<int>("LeaveRequestId")
                        .HasColumnType("int");

                    b.Property<DateTime>("TheDate")
                        .HasColumnType("datetime2");

                    b.HasKey("LeaveRequestDayId");

                    b.HasIndex("LeaveRequestId");

                    b.ToTable("LeaveRequestDay");
                });

            modelBuilder.Entity("VertexHRMS.DAL.Entities.LeaveType", b =>
                {
                    b.Property<int>("LeaveTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LeaveTypeId"));

                    b.Property<bool>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LeaveTypeId");

                    b.ToTable("LeaveType");
                });

            modelBuilder.Entity("VertexHRMS.DAL.Entities.Offer", b =>
                {
                    b.Property<int>("OfferId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OfferId"));

                    b.Property<int>("ApplicantId")
                        .HasColumnType("int");

                    b.Property<string>("IssuedByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("JobOpeningId")
                        .HasColumnType("int");

                    b.Property<DateTime>("JoiningDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("OfferDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("OfferedSalary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OfferId");

                    b.HasIndex("ApplicantId");

                    b.HasIndex("IssuedByUserId");

                    b.HasIndex("JobOpeningId");

                    b.ToTable("Offer");
                });

            modelBuilder.Entity("VertexHRMS.DAL.Entities.Onboarding", b =>
                {
                    b.Property<int>("OnboardingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OnboardingId"));

                    b.Property<int>("ApplicantId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<bool>("OrientationCompleted")
                        .HasColumnType("bit");

                    b.Property<string>("ResponsibleUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("OnboardingId");

                    b.HasIndex("ApplicantId")
                        .IsUnique();

                    b.HasIndex("EmployeeId");

                    b.HasIndex("ResponsibleUserId");

                    b.ToTable("Onboarding");
                });

            modelBuilder.Entity("VertexHRMS.DAL.Entities.OvertimeRequest", b =>
                {
                    b.Property<int>("OvertimeRequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OvertimeRequestId"));

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Hours")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("OvertimeDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequestedByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OvertimeRequestId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("RequestedByUserId");

                    b.ToTable("OvertimeRequests");
                });

            modelBuilder.Entity("VertexHRMS.DAL.Entities.Payroll", b =>
                {
                    b.Property<int>("PayrollId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PayrollId"));

                    b.Property<decimal>("BaseSalary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<decimal>("GrossEarnings")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("NetSalary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PayrollRunId")
                        .HasColumnType("int");

                    b.HasKey("PayrollId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("PayrollRunId");

                    b.ToTable("Payrolls");
                });

            modelBuilder.Entity("VertexHRMS.DAL.Entities.PayrollDeduction", b =>
                {
                    b.Property<int>("PayrollDeductionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PayrollDeductionId"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("DeductionId")
                        .HasColumnType("int");

                    b.Property<int>("PayrollId")
                        .HasColumnType("int");

                    b.HasKey("PayrollDeductionId");

                    b.HasIndex("DeductionId");

                    b.HasIndex("PayrollId");

                    b.ToTable("PayrollDeduction");
                });

            modelBuilder.Entity("VertexHRMS.DAL.Entities.PayrollRun", b =>
                {
                    b.Property<int>("PayrollRunId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PayrollRunId"));

                    b.Property<DateTime>("PeriodEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PeriodStart")
                        .HasColumnType("datetime2");

                    b.Property<string>("RunByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("RunDate")
                        .HasColumnType("datetime2");

                    b.HasKey("PayrollRunId");

                    b.HasIndex("RunByUserId");

                    b.ToTable("PayrollRun");
                });

            modelBuilder.Entity("VertexHRMS.DAL.Entities.Position", b =>
                {
                    b.Property<int>("PositionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PositionId"));

                    b.Property<decimal>("BaseSalary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PositionName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("PositionId");

                    b.ToTable("Positions");

                    b.HasData(
                        new
                        {
                            PositionId = 1,
                            BaseSalary = 75000m,
                            PositionName = "Software Developer"
                        },
                        new
                        {
                            PositionId = 2,
                            BaseSalary = 65000m,
                            PositionName = "HR Manager"
                        },
                        new
                        {
                            PositionId = 3,
                            BaseSalary = 60000m,
                            PositionName = "Financial Analyst"
                        },
                        new
                        {
                            PositionId = 4,
                            BaseSalary = 55000m,
                            PositionName = "Marketing Specialist"
                        },
                        new
                        {
                            PositionId = 5,
                            BaseSalary = 70000m,
                            PositionName = "Operations Manager"
                        },
                        new
                        {
                            PositionId = 6,
                            BaseSalary = 68000m,
                            PositionName = "System Administrator"
                        },
                        new
                        {
                            PositionId = 7,
                            BaseSalary = 50000m,
                            PositionName = "Accountant"
                        },
                        new
                        {
                            PositionId = 8,
                            BaseSalary = 40000m,
                            PositionName = "HR Assistant"
                        });
                });

            modelBuilder.Entity("VertexHRMS.DAL.Entities.Resignation", b =>
                {
                    b.Property<int>("ResignationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ResignationId"));

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastWorkingDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NoticeDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequestedByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ResignationId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("RequestedByUserId");

                    b.ToTable("Resignations");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("VertexHRMS.DAL.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("VertexHRMS.DAL.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("VertexHRMS.DAL.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("VertexHRMS.DAL.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("VertexHRMS.DAL.Entities.Applicant", b =>
                {
                    b.HasOne("VertexHRMS.DAL.Entities.ApplicationUser", "IdentityUser")
                        .WithMany()
                        .HasForeignKey("IdentityUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("VertexHRMS.DAL.Entities.JobOpening", "JobOpening")
                        .WithMany("Applicants")
                        .HasForeignKey("JobOpeningId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("IdentityUser");

                    b.Navigation("JobOpening");
                });

            modelBuilder.Entity("VertexHRMS.DAL.Entities.AttendanceRecord", b =>
                {
                    b.HasOne("VertexHRMS.DAL.Entities.Employee", "Employee")
                        .WithMany("AttendanceRecords")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("VertexHRMS.DAL.Entities.Department", b =>
                {
                    b.HasOne("VertexHRMS.DAL.Entities.Department", "ParentDepartment")
                        .WithMany("Children")
                        .HasForeignKey("ParentDepartmentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ParentDepartment");
                });

            modelBuilder.Entity("VertexHRMS.DAL.Entities.Employee", b =>
                {
                    b.HasOne("VertexHRMS.DAL.Entities.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("VertexHRMS.DAL.Entities.ApplicationUser", "IdentityUser")
                        .WithOne("Employee")
                        .HasForeignKey("VertexHRMS.DAL.Entities.Employee", "IdentityUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VertexHRMS.DAL.Entities.Employee", "Manager")
                        .WithMany("DirectReports")
                        .HasForeignKey("ManagerId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("VertexHRMS.DAL.Entities.Position", "Position")
                        .WithMany("Employees")
                        .HasForeignKey("PositionID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("IdentityUser");

                    b.Navigation("Manager");

                    b.Navigation("Position");
                });

            modelBuilder.Entity("VertexHRMS.DAL.Entities.ExitClearance", b =>
                {
                    b.HasOne("VertexHRMS.DAL.Entities.ApplicationUser", "FinanceClearedByUser")
                        .WithMany()
                        .HasForeignKey("FinanceClearedByUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("VertexHRMS.DAL.Entities.ApplicationUser", "HRClearedByUser")
                        .WithMany()
                        .HasForeignKey("HRClearedByUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("VertexHRMS.DAL.Entities.ApplicationUser", "ITClearedByUser")
                        .WithMany()
                        .HasForeignKey("ITClearedByUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("VertexHRMS.DAL.Entities.Resignation", "Resignation")
                        .WithOne("ExitClearance")
                        .HasForeignKey("VertexHRMS.DAL.Entities.ExitClearance", "ResignationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("FinanceClearedByUser");

                    b.Navigation("HRClearedByUser");

                    b.Navigation("ITClearedByUser");

                    b.Navigation("Resignation");
                });

            modelBuilder.Entity("VertexHRMS.DAL.Entities.Interview", b =>
                {
                    b.HasOne("VertexHRMS.DAL.Entities.Applicant", "Applicant")
                        .WithMany("Interviews")
                        .HasForeignKey("ApplicantId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("VertexHRMS.DAL.Entities.Employee", "Interviewer")
                        .WithMany()
                        .HasForeignKey("InterviewerId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("VertexHRMS.DAL.Entities.ApplicationUser", "InterviewerUser")
                        .WithMany()
                        .HasForeignKey("InterviewerUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("VertexHRMS.DAL.Entities.JobOpening", "JobOpening")
                        .WithMany("Interviews")
                        .HasForeignKey("JobOpeningId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Applicant");

                    b.Navigation("Interviewer");

                    b.Navigation("InterviewerUser");

                    b.Navigation("JobOpening");
                });

            modelBuilder.Entity("VertexHRMS.DAL.Entities.JobOpening", b =>
                {
                    b.HasOne("VertexHRMS.DAL.Entities.Department", "Department")
                        .WithMany("JobOpenings")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("VertexHRMS.DAL.Entities.Position", "Position")
                        .WithMany("JobOpenings")
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Position");
                });

            modelBuilder.Entity("VertexHRMS.DAL.Entities.LeaveApproval", b =>
                {
                    b.HasOne("VertexHRMS.DAL.Entities.Employee", "ApproverEmployee")
                        .WithMany()
                        .HasForeignKey("ApproverEmployeeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("VertexHRMS.DAL.Entities.ApplicationUser", "ApproverUser")
                        .WithMany()
                        .HasForeignKey("ApproverUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("VertexHRMS.DAL.Entities.LeaveRequest", "LeaveRequest")
                        .WithMany("Approvals")
                        .HasForeignKey("LeaveRequestId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ApproverEmployee");

                    b.Navigation("ApproverUser");

                    b.Navigation("LeaveRequest");
                });

            modelBuilder.Entity("VertexHRMS.DAL.Entities.LeaveEntitlement", b =>
                {
                    b.HasOne("VertexHRMS.DAL.Entities.Employee", "Employee")
                        .WithMany("LeaveEntitlements")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("VertexHRMS.DAL.Entities.LeaveType", "LeaveType")
                        .WithMany()
                        .HasForeignKey("LeaveTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("LeaveType");
                });

            modelBuilder.Entity("VertexHRMS.DAL.Entities.LeaveLedger", b =>
                {
                    b.HasOne("VertexHRMS.DAL.Entities.Employee", "Employee")
                        .WithMany("LeaveLedgerEntries")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("VertexHRMS.DAL.Entities.LeaveType", "LeaveType")
                        .WithMany()
                        .HasForeignKey("LeaveTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("LeaveType");
                });

            modelBuilder.Entity("VertexHRMS.DAL.Entities.LeavePolicy", b =>
                {
                    b.HasOne("VertexHRMS.DAL.Entities.LeaveType", "LeaveType")
                        .WithMany("Policies")
                        .HasForeignKey("LeaveTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("LeaveType");
                });

            modelBuilder.Entity("VertexHRMS.DAL.Entities.LeaveRequest", b =>
                {
                    b.HasOne("VertexHRMS.DAL.Entities.Employee", "Employee")
                        .WithMany("LeaveRequests")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("VertexHRMS.DAL.Entities.LeaveType", "LeaveType")
                        .WithMany()
                        .HasForeignKey("LeaveTypeID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("VertexHRMS.DAL.Entities.ApplicationUser", "RequestedByUser")
                        .WithMany()
                        .HasForeignKey("RequestedByUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("LeaveType");

                    b.Navigation("RequestedByUser");
                });

            modelBuilder.Entity("VertexHRMS.DAL.Entities.LeaveRequestDay", b =>
                {
                    b.HasOne("VertexHRMS.DAL.Entities.LeaveRequest", "LeaveRequest")
                        .WithMany("Days")
                        .HasForeignKey("LeaveRequestId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("LeaveRequest");
                });

            modelBuilder.Entity("VertexHRMS.DAL.Entities.Offer", b =>
                {
                    b.HasOne("VertexHRMS.DAL.Entities.Applicant", "Applicant")
                        .WithMany("Offers")
                        .HasForeignKey("ApplicantId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("VertexHRMS.DAL.Entities.ApplicationUser", "IssuedByUser")
                        .WithMany()
                        .HasForeignKey("IssuedByUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("VertexHRMS.DAL.Entities.JobOpening", "JobOpening")
                        .WithMany("Offers")
                        .HasForeignKey("JobOpeningId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Applicant");

                    b.Navigation("IssuedByUser");

                    b.Navigation("JobOpening");
                });

            modelBuilder.Entity("VertexHRMS.DAL.Entities.Onboarding", b =>
                {
                    b.HasOne("VertexHRMS.DAL.Entities.Applicant", "applicant")
                        .WithOne("Onboarding")
                        .HasForeignKey("VertexHRMS.DAL.Entities.Onboarding", "ApplicantId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("VertexHRMS.DAL.Entities.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("VertexHRMS.DAL.Entities.ApplicationUser", "ResponsibleUser")
                        .WithMany()
                        .HasForeignKey("ResponsibleUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("ResponsibleUser");

                    b.Navigation("applicant");
                });

            modelBuilder.Entity("VertexHRMS.DAL.Entities.OvertimeRequest", b =>
                {
                    b.HasOne("VertexHRMS.DAL.Entities.Employee", "Employee")
                        .WithMany("OvertimeRequests")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("VertexHRMS.DAL.Entities.ApplicationUser", "RequestedByUser")
                        .WithMany()
                        .HasForeignKey("RequestedByUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("RequestedByUser");
                });

            modelBuilder.Entity("VertexHRMS.DAL.Entities.Payroll", b =>
                {
                    b.HasOne("VertexHRMS.DAL.Entities.Employee", "Employee")
                        .WithMany("Payrolls")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("VertexHRMS.DAL.Entities.PayrollRun", "PayrollRun")
                        .WithMany("Payrolls")
                        .HasForeignKey("PayrollRunId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("PayrollRun");
                });

            modelBuilder.Entity("VertexHRMS.DAL.Entities.PayrollDeduction", b =>
                {
                    b.HasOne("VertexHRMS.DAL.Entities.Deduction", "Deduction")
                        .WithMany("PayrollDeductions")
                        .HasForeignKey("DeductionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("VertexHRMS.DAL.Entities.Payroll", "Payroll")
                        .WithMany("Deductions")
                        .HasForeignKey("PayrollId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Deduction");

                    b.Navigation("Payroll");
                });

            modelBuilder.Entity("VertexHRMS.DAL.Entities.PayrollRun", b =>
                {
                    b.HasOne("VertexHRMS.DAL.Entities.ApplicationUser", "RunByUser")
                        .WithMany()
                        .HasForeignKey("RunByUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("RunByUser");
                });

            modelBuilder.Entity("VertexHRMS.DAL.Entities.Resignation", b =>
                {
                    b.HasOne("VertexHRMS.DAL.Entities.Employee", "Employee")
                        .WithMany("Resignations")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("VertexHRMS.DAL.Entities.ApplicationUser", "RequestedByUser")
                        .WithMany()
                        .HasForeignKey("RequestedByUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("RequestedByUser");
                });

            modelBuilder.Entity("VertexHRMS.DAL.Entities.Applicant", b =>
                {
                    b.Navigation("Interviews");

                    b.Navigation("Offers");

                    b.Navigation("Onboarding")
                        .IsRequired();
                });

            modelBuilder.Entity("VertexHRMS.DAL.Entities.ApplicationUser", b =>
                {
                    b.Navigation("Employee")
                        .IsRequired();
                });

            modelBuilder.Entity("VertexHRMS.DAL.Entities.Deduction", b =>
                {
                    b.Navigation("PayrollDeductions");
                });

            modelBuilder.Entity("VertexHRMS.DAL.Entities.Department", b =>
                {
                    b.Navigation("Children");

                    b.Navigation("Employees");

                    b.Navigation("JobOpenings");
                });

            modelBuilder.Entity("VertexHRMS.DAL.Entities.Employee", b =>
                {
                    b.Navigation("AttendanceRecords");

                    b.Navigation("DirectReports");

                    b.Navigation("LeaveEntitlements");

                    b.Navigation("LeaveLedgerEntries");

                    b.Navigation("LeaveRequests");

                    b.Navigation("OvertimeRequests");

                    b.Navigation("Payrolls");

                    b.Navigation("Resignations");
                });

            modelBuilder.Entity("VertexHRMS.DAL.Entities.JobOpening", b =>
                {
                    b.Navigation("Applicants");

                    b.Navigation("Interviews");

                    b.Navigation("Offers");
                });

            modelBuilder.Entity("VertexHRMS.DAL.Entities.LeaveRequest", b =>
                {
                    b.Navigation("Approvals");

                    b.Navigation("Days");
                });

            modelBuilder.Entity("VertexHRMS.DAL.Entities.LeaveType", b =>
                {
                    b.Navigation("Policies");
                });

            modelBuilder.Entity("VertexHRMS.DAL.Entities.Payroll", b =>
                {
                    b.Navigation("Deductions");
                });

            modelBuilder.Entity("VertexHRMS.DAL.Entities.PayrollRun", b =>
                {
                    b.Navigation("Payrolls");
                });

            modelBuilder.Entity("VertexHRMS.DAL.Entities.Position", b =>
                {
                    b.Navigation("Employees");

                    b.Navigation("JobOpenings");
                });

            modelBuilder.Entity("VertexHRMS.DAL.Entities.Resignation", b =>
                {
                    b.Navigation("ExitClearance")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
